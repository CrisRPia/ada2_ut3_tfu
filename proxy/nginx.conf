events {}

http {
    # Define groups of servers for each service.
    # The names (e.g., 'auth-service') MUST match the service names in docker-compose.yml.
    # The port (8080) is what the .NET app listens on inside its container.
    upstream auth_service_group {
        server auth-service:8080;
    }

    upstream songs_service_group {
        server songs-service:8080;
    }

    upstream playlists_service_group {
        server playlists-service:8080;
    }

    server {
        # Nginx listens on port 80 inside the container.
        listen 80;

        # --- Routing Rules ---

        # Route requests starting with /api/auth/ to the auth service.
        location /api/auth/ {
            proxy_pass http://auth_service_group;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Route requests starting with /api/songs/ to the songs service.
        location /api/songs/ {
            proxy_pass http://songs_service_group;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;

            # Special headers for WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
        }

        # Route requests starting with /api/playlists/ to the playlists service.
        location /api/playlists/ {
            proxy_pass http://playlists_service_group;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}
